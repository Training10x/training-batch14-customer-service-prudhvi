name: Customer Service CI/CD

on:
  push:
    branches: [ "main", "sprint4/feature", "dev", "hotfix", "release" ]
  pull_request:
    branches: [ "main", "sprint4/feature", "dev", "hotfix", "release" ]

jobs:
  checkout_and_java_setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

  build_and_test:
    runs-on: ubuntu-latest
    needs: checkout_and_java_setup
    steps:
      - uses: actions/checkout@v4
      - name: Use pre-built Java environment
        uses: ./.github/actions/use-java-cache@v1  # Assuming this is a custom action in your repo

      - name: Build with Maven
        run: mvn clean install
      - name: Run Tests
        run: mvn test

  code_quality_analysis:
    runs-on: ubuntu-latest
    needs: checkout_and_java_setup
    steps:
      - uses: actions/checkout@v4
      - name: Use pre-built Java environment
        uses: ./.github/actions/use-java-cache@v1  # Assuming this is a custom action in your repo
      - name: Analyze Code Quality
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=prudhvi-nelaturi_customer-service

  build_and_push_docker_image:
    runs-on: ubuntu-latest
    needs: [checkout_and_java_setup, build_and_test, code_quality_analysis]
    steps:
      - uses: actions/checkout@v4
      - name: Use pre-built Java environment
        uses: ./.github/actions/use-java-cache@v1  # Assuming this is a custom action in your repo
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: prudhvi2902/customer-service-image
          tags: v1
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}